// <auto-generated/>
namespace DataMapper.Migrations
{
    using System;
    using System.Data.Entity.Migrations;

    public partial class InitialCreate : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Authors",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        FullName = c.String(nullable: false, maxLength: 50),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Books",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Title = c.String(nullable: false, maxLength: 50),
                        BorrowedBooks_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.BorrowedBooks", t => t.BorrowedBooks_Id)
                .Index(t => t.BorrowedBooks_Id);
            
            CreateTable(
                "dbo.Domains",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Name = c.String(nullable: false, maxLength: 50),
                        ParentDomain_Id = c.Int(),
                        Book_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Domains", t => t.ParentDomain_Id)
                .ForeignKey("dbo.Books", t => t.Book_Id)
                .Index(t => t.ParentDomain_Id)
                .Index(t => t.Book_Id);
            
            CreateTable(
                "dbo.Editions",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        BookId = c.Int(nullable: false),
                        PublishingHouse = c.String(nullable: false),
                        Year = c.Int(nullable: false),
                        NumberOfPages = c.Int(nullable: false),
                        EditionNumber = c.Int(nullable: false),
                        BookType = c.Int(nullable: false),
                        NumberOfCopiesForBorrowing = c.Int(nullable: false),
                        NumberOfCopiesForReading = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Books", t => t.BookId, cascadeDelete: true)
                .Index(t => t.BookId);
            
            CreateTable(
                "dbo.BorrowedBooks",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        BorrowDate = c.DateTime(nullable: false),
                        ReaderId = c.Int(nullable: false),
                        OriginalReturnDate = c.DateTime(nullable: false),
                        ActualReturnDate = c.DateTime(nullable: false),
                        LibrarianId = c.Int(nullable: false),
                        BorrowStatus = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Users", t => t.LibrarianId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.ReaderId)
                .Index(t => t.ReaderId)
                .Index(t => t.LibrarianId);
            
            CreateTable(
                "dbo.Users",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        FirstName = c.String(nullable: false, maxLength: 50),
                        LastName = c.String(nullable: false, maxLength: 50),
                        Address = c.String(nullable: false, maxLength: 100),
                        Email = c.String(nullable: false, maxLength: 100),
                        PhoneNumber = c.String(maxLength: 10),
                        Password = c.String(nullable: false, maxLength: 30),
                        AccountType = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Conditions",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Name = c.String(nullable: false, maxLength: 10),
                        Description = c.String(nullable: false, maxLength: 100),
                        Value = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.BookAuthors",
                c => new
                    {
                        Book_Id = c.Int(nullable: false),
                        Author_Id = c.Int(nullable: false),
                    })
                .PrimaryKey(t => new { t.Book_Id, t.Author_Id })
                .ForeignKey("dbo.Books", t => t.Book_Id, cascadeDelete: true)
                .ForeignKey("dbo.Authors", t => t.Author_Id, cascadeDelete: true)
                .Index(t => t.Book_Id)
                .Index(t => t.Author_Id);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.BorrowedBooks", "ReaderId", "dbo.Users");
            DropForeignKey("dbo.BorrowedBooks", "LibrarianId", "dbo.Users");
            DropForeignKey("dbo.Books", "BorrowedBooks_Id", "dbo.BorrowedBooks");
            DropForeignKey("dbo.Editions", "BookId", "dbo.Books");
            DropForeignKey("dbo.Domains", "Book_Id", "dbo.Books");
            DropForeignKey("dbo.Domains", "ParentDomain_Id", "dbo.Domains");
            DropForeignKey("dbo.BookAuthors", "Author_Id", "dbo.Authors");
            DropForeignKey("dbo.BookAuthors", "Book_Id", "dbo.Books");
            DropIndex("dbo.BookAuthors", new[] { "Author_Id" });
            DropIndex("dbo.BookAuthors", new[] { "Book_Id" });
            DropIndex("dbo.BorrowedBooks", new[] { "LibrarianId" });
            DropIndex("dbo.BorrowedBooks", new[] { "ReaderId" });
            DropIndex("dbo.Editions", new[] { "BookId" });
            DropIndex("dbo.Domains", new[] { "Book_Id" });
            DropIndex("dbo.Domains", new[] { "ParentDomain_Id" });
            DropIndex("dbo.Books", new[] { "BorrowedBooks_Id" });
            DropTable("dbo.BookAuthors");
            DropTable("dbo.Conditions");
            DropTable("dbo.Users");
            DropTable("dbo.BorrowedBooks");
            DropTable("dbo.Editions");
            DropTable("dbo.Domains");
            DropTable("dbo.Books");
            DropTable("dbo.Authors");
        }
    }
}
